#######################################
#            Cusp v0.3.1              #
#######################################

Summary
  Minor compatibility fixes for Thrust 1.6.x

#######################################
#            Cusp v0.3.0              #
#######################################

Summary
  Cusp v0.3.0 provides support for CUDA 4.1 and Thrust v1.5.  Version
  0.3.0 includes incremental improvements to MatrixMarket I/O support
  and array format conversions.

New Features
  MatrixMarket I/O routines support complex matrices
  array1d is convertible to and from all other formats (e.g. array1d<->array2d)

Bug Fixes
  Resize final output of CSR * CSR to account for excluded zeros

Acknowledgements
  Justin Luitjens and Simon Layton for diagnosing CSR SpMM bug
  Kashif Rasul for Thrust v1.6 support patch
  Filipe Maia and Steven Dalton for general support and maintenance

#######################################
#            Cusp v0.2.0              #
#######################################

Summary
  Cusp v0.2.0 provides support for CUDA 4.0 in addition to many new
  features and performance enhancements.  Support for complex numbers
  is now available through the cusp::complex class. Lightweight views
  to dense arrays and sparse matrix formats are now provided, allowing
  user-allocated data to be interfaced efficiently with Cusp algorithms.
  The performance of sparse matrix format conversions has been improved
  dramatically on the device. Preconditioners based on algebraic multigrid
  (AMG) and approximate inverse (AINV) methods have been added to the library.

New Features
  Complex numbers
    cusp::complex 
    cusp/cmath.h
    cusp/complex.h

  Sparse Matrices
    cusp::coo_matrix_view
    cusp::csr_matrix_view
    cusp::dia_matrix_view
    cusp::ell_matrix_view
    cusp::hyb_matrix_view
  
  Krylov methods
    cusp::krylov::bicg
    cusp::krylov::gmres
    cusp::krylov::cg_m
    cusp::krylov::bicgstab_m

  Input/Output
    cusp::io::read_matrix_market_stream

  Algorithms
    cusp::add
    cusp::subtract
    cusp::graph::maximal_independent_set
    cusp::copy
    cusp::convert
    cusp::blas::nrm1
    cusp::blas::nrmmax
    cusp::relaxation::polynomial

  Matrix Gallery
    cusp::gallery::diffusion

  Preconditioners
    cusp::precond::scaled_bridson_ainv
    cusp::precond::bridson_ainv
    cusp::precond::nonsym_bridson_ainv
    cusp::precond::smoothed_aggregation

Bug Fixes
  #12 MatrixMarket file reader fails on OSX	 
  #18 ensure that IndexType=long is supported	 
  #27 bicgstab can't solve Ix = b	 
  #31 device::spmm_coo requires huge amount of memory	 
  #37 cusp::graph::maximal_independent_set should return the size of the MIS	 
  #45 silence compiler warnings	 
  #66 thrust hg version no longer compatible with hg version of cusp	 
  #71 Several cusp::blas calls cause unexpected results by converting the output to ScalarType

Deprecations
  cusp::print_matrix has been replaced by cusp::print
  cusp::blas functions only accept arrays and array views

Known Issues
  Cusp is known to cause the nvcc compiler to issue warnings of the form:
    warning: calling a host function ... from a __device__/__global__ function ... is not allowed

Acknowledgements
  Filipe Maia for general maintenance, testing, and implementations of cusp::complex and BiCG
  Greg van Anders for CG-M and BiCGstab-M implementations
  Joe Gordon for GMRES implementation
  Jonathan Cohen for AINV preconditioners
  Steven Dalton for improvements to conversion routines and smoothed aggregation preconditioner

#######################################
#            Cusp v0.1.1              #
#######################################

Summary
  Small fixes for compatibility with CUDA 3.1

#######################################
#            Cusp v0.1.0              #
#######################################

Summary
  Initial release

Features
  Sparse Matrix Support
    cusp::coo_matrix
    cusp::csr_matrix
    cusp::dia_matrix
    cusp::ell_matrix
    cusp::hyb_matrix
    conversion between all formats
    host<->device transfers
  Dense Matrix Support
    cusp::array1d
    cusp::array2d
  Algorithms
    cusp::multiply(A,x,y) : y = A*x
    cusp::transpose(A,At) : A^T
    cusp::blas::*
  Gallery
    cusp::gallery::stencil
    cusp::gallery::poisson5pt
  Solvers
    cusp::krylov::cg
    cusp::krylov::bicgstab
  Monitors
    cusp::default_monitor
    cusp::verbose_monitor
  Preconditioners
    cusp::precond::diagonal
  User-Defined Linear Operators
    cusp::linear_operator
  File I/O
    cusp::io::read_matrix_market_file
    cusp::io::write_matrix_market_file
  Utilities
    cusp::print_matrix
    cusp::is_valid_matrix etc.

Known Issues
  Many routines assume that several arguments have the exact same type

